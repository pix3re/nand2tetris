// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ri1, b=ri2, c=ri3, d=ri4, e=ri5, f=ri6, g=ri7, h=ri8);

    Register(in=in, load=ri1, out=ro1);
    Register(in=in, load=ri2, out=ro2);
    Register(in=in, load=ri3, out=ro3);
    Register(in=in, load=ri4, out=ro4);
    Register(in=in, load=ri5, out=ro5);
    Register(in=in, load=ri6, out=ro6);
    Register(in=in, load=ri7, out=ro7);
    Register(in=in, load=ri8, out=ro8);
    
    // select register data for out
    Mux8Way16(a=ro1, b=ro2, c=ro3, d=ro4, e=ro5, f=ro6, g=ro7, h=ro8, sel=address, out=out);
}
